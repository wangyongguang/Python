###生成器（generator）
* 受到内存限制，列表容量肯定是有限的。创建一个包含100万个元素的列表，不仅占用很大的存储空间，如果我们仅仅需要访问前面几个元素，那后面绝大多数元素占用的空间都白白浪费了。
* 如果列表元素可以按照某种算法推算出来，我们可以在循环的过程中不断推算出后续的元素，**在Python中，这种一边循环一边计算的机制，称为生成器：generator。**
###创建generator
1. 第一种方法很简单，只要把一个列表生成式的[]改成()，就创建了一个generator；
----L = [x * x for x in range(10)]  
----L   
----[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
----**g = (x * x for x in range(10))**  
----g   
<generator object <genexpr> at 0x1022ef630>
**----next(g)  
----0**   
----next(g)     
----1   
----next(g)     
4
2. 当然，上面这种不断调用next(g)实在是太变态了，**正确的方法是使用for循环，因为generator也是可迭代对象**：
----g = (x * x for x in range(10))      
----for n in g:  
--------print(n)    
... 
0
1
4
9
16